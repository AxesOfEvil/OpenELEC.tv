diff --git a/language/English/strings.po b/language/English/strings.po
index 15090fc..e6dd8b5 100755
--- a/language/English/strings.po
+++ b/language/English/strings.po
@@ -16104,6 +16104,16 @@ msgctxt "#37030"
 msgid "Unlimited"
 msgstr ""
 
+#: system/settings/settings.xml
+msgctxt "#60010"
+msgid "Enable hardware CEC"
+msgstr ""
+
+#: system/settings/settings.xml
+msgctxt "#60011"
+msgid "Enable hardware Consumer Electronics Control"
+msgstr ""
+
 #. Description of setting #14102 Settings -> Video -> Discs -> Blu-ray playback mode
 #: system/settings/settings.xml
 msgctxt "#37031"
diff --git a/language/Russian/strings.po b/language/Russian/strings.po
index fd5f2a8..d87b976 100644
--- a/language/Russian/strings.po
+++ b/language/Russian/strings.po
@@ -13073,6 +13073,14 @@ msgctxt "#37030"
 msgid "Unlimited"
 msgstr "Неограничен."
 
+msgctxt "#60010"
+msgid "Включить аппаратный CEC"
+msgstr ""
+
+msgctxt "#60011"
+msgid "Включить аппаратный Consumer Electronics Control."
+msgstr ""
+
 msgctxt "#37031"
 msgid "Specifies how Blu-rays should be opened/played back. Disc menus are not fully supported yet and may cause problems."
 msgstr "Метод открытия/воспроизведения дисков Blu-ray. В данный момент дисков поддерживается не полностью, и его открытие может вызвать проблемы."
diff --git a/system/settings/settings.xml b/system/settings/settings.xml
index 367542d..781a1c0 100644
--- a/system/settings/settings.xml
+++ b/system/settings/settings.xml
@@ -2601,6 +2601,12 @@
         </setting>
       </group>
       <group id="2">
+        <setting id="input.enablecec" type="boolean" label="60010" help="60011">
+          <requirement>HAVE_AMCODEC</requirement>
+          <level>0</level>
+          <control type="toggle" />
+          <default>false</default>
+        </setting> 
         <setting id="input.enablemouse" type="boolean" label="21369" help="36377">
           <level>0</level>
           <control type="toggle" />
diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index 4a5619a..1d1dafe 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -329,6 +329,10 @@
   #include "input/windows/IRServerSuite.h"
 #endif
 
+#if defined(HAS_LIBAMCODEC)
+#include "input/linux/HwCEC.h"
+#endif
+
 #if defined(TARGET_WINDOWS)
 #include "input/windows/WINJoystick.h"
 #elif defined(HAS_SDL_JOYSTICK) || defined(HAS_EVENT_SERVER)
@@ -1532,6 +1536,10 @@ bool CApplication::Initialize()
                     CPeripheralImon::GetCountOfImonsConflictWithDInput() == 0 );
 #endif
 
+#ifdef HAS_LIBAMCODEC
+  g_CEC.SetEnabled(CSettings::Get().GetBool("input.enablecec"));
+#endif
+
   // show info dialog about moved configuration files if needed
   ShowAppMigrationMessage();
 
diff --git a/xbmc/SystemGlobals.cpp b/xbmc/SystemGlobals.cpp
index 0335613..c8bf854 100644
--- a/xbmc/SystemGlobals.cpp
+++ b/xbmc/SystemGlobals.cpp
@@ -42,7 +42,9 @@
 #elif defined(HAS_SDL_JOYSTICK) 
 #include "input/SDLJoystick.h"
 #endif
-
+#if defined(HAS_LIBAMCODEC)
+#include "input/linux/HwCEC.h"
+#endif
 #if defined(HAS_FILESYSTEM_RAR)
 #include "filesystem/RarManager.h"
 #endif
@@ -65,6 +67,9 @@
 #if defined(HAS_SDL_JOYSTICK) 
   CJoystick          g_Joystick; 
 #endif
+#if defined(HAS_LIBAMCODEC)
+  CCEC g_CEC;
+#endif 
   CGUIPassword       g_passwordManager;
   CGUIInfoManager    g_infoManager;
 
diff --git a/xbmc/input/linux/HwCEC.cpp b/xbmc/input/linux/HwCEC.cpp
new file mode 100644
index 0000000..0e5856a
--- /dev/null
+++ b/xbmc/input/linux/HwCEC.cpp
@@ -0,0 +1,40 @@
+#include "HwCEC.h"
+#include "Util.h"
+#include "settings/lib/Setting.h"
+#include "utils/AMLUtils.h"
+#include "utils/log.h"
+
+CCEC::CCEC()
+{
+}
+
+void CCEC::OnSettingChanged(const CSetting *setting)
+{
+	if (setting == NULL)
+		return;
+
+	const std::string &settingId = setting->GetId();
+	if (settingId == "input.enablecec")
+		SetEnabled(((CSettingBool*)setting)->GetValue());
+}
+
+
+void CCEC::SetEnabled(bool enabled /*=true*/)
+{
+	if (enabled && !m_cecEnabled)
+	    {
+		m_cecEnabled = true;
+	    }
+	else if (!enabled && m_cecEnabled)
+	    {
+		m_cecEnabled = false;
+	    }
+
+	#ifdef HAS_LIBAMCODEC
+	if (aml_present())
+	{
+		 aml_set_sysfs_int("/sys/class/amhdmitx/amhdmitx0/cec_config", m_cecEnabled ? 15 : 0);
+		 CLog::Log(LOGNOTICE, "Hardware CEC enabling option set to %s", m_cecEnabled ? "TRUE" : "FALSE");
+	}
+	#endif
+}
diff --git a/xbmc/input/linux/HwCEC.h b/xbmc/input/linux/HwCEC.h
new file mode 100644
index 0000000..569f30d
--- /dev/null
+++ b/xbmc/input/linux/HwCEC.h
@@ -0,0 +1,16 @@
+#pragma once
+#include "settings/lib/ISettingCallback.h"
+
+// Class to manage all connected joysticks
+class CCEC : public ISettingCallback
+{
+public:
+	CCEC();
+	virtual void OnSettingChanged(const CSetting *setting);
+	bool IsEnabled() const { return m_cecEnabled; }
+	void SetEnabled(bool enabled = true);
+private: 
+	bool m_cecEnabled;
+};
+
+extern CCEC g_CEC;
\ No newline at end of file
diff --git a/xbmc/input/linux/Makefile.in b/xbmc/input/linux/Makefile.in
index 56b428e..1b24871 100644
--- a/xbmc/input/linux/Makefile.in
+++ b/xbmc/input/linux/Makefile.in
@@ -1,5 +1,5 @@
 SRCS=LIRC.cpp \
-  LinuxInputDevices.cpp
+  LinuxInputDevices.cpp HwCEC.cpp
 
 # xkbcommon detail
 ifeq (@USE_XKBCOMMON@,1)
diff --git a/xbmc/settings/Settings.cpp b/xbmc/settings/Settings.cpp
index 3c981a4..3f07eb3 100644
--- a/xbmc/settings/Settings.cpp
+++ b/xbmc/settings/Settings.cpp
@@ -38,6 +38,9 @@
 #include "guilib/StereoscopicsManager.h"
 #include "input/KeyboardLayout.h"
 #include "input/MouseStat.h"
+#if defined(HAS_LIBAMCODEC)
+#include "input/linux/HwCEC.h"
+#endif
 #if defined(TARGET_WINDOWS)
 #include "input/windows/WINJoystick.h"
 #elif defined(HAS_SDL_JOYSTICK)
@@ -270,6 +273,9 @@ void CSettings::Uninitialize()
 #if defined(TARGET_WINDOWS) || defined(HAS_SDL_JOYSTICK)
   m_settingsManager->UnregisterCallback(&g_Joystick);
 #endif
+#if defined(HAS_LIBAMCODEC)
+  m_settingsManager->UnregisterCallback(&g_CEC);
+#endif
   m_settingsManager->UnregisterCallback(&g_Mouse);
   m_settingsManager->UnregisterCallback(&CNetworkServices::Get());
   m_settingsManager->UnregisterCallback(&g_passwordManager);
@@ -753,6 +759,12 @@ void CSettings::InitializeISettingCallbacks()
   m_settingsManager->RegisterCallback(&g_Joystick, settingSet);
 #endif
 
+#if defined(HAS_LIBAMCODEC)
+  settingSet.clear();
+  settingSet.insert("input.enablecec");
+  m_settingsManager->RegisterCallback(&g_CEC, settingSet);
+#endif
+
   settingSet.clear();
   settingSet.insert("input.enablemouse");
   m_settingsManager->RegisterCallback(&g_Mouse, settingSet);
