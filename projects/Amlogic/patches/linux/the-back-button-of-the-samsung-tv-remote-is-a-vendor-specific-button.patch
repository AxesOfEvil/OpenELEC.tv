diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_cec_key.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_cec_key.c
index 18dd095..7700759 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_cec_key.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_cec_key.c
@@ -36,7 +36,7 @@
 #include <linux/amlogic/hdmi_tx/hdmi_tx_cec.h>
 hdmitx_dev_t *hdmitx_device = NULL;
 
-__u16 cec_key_map[128] = {
+__u16 cec_key_map[160] = {
     KEY_SELECT, KEY_UP, KEY_DOWN, KEY_LEFT, KEY_RIGHT, 0 , 0 , 0 ,//0x00
     0 , KEY_HOMEPAGE , KEY_MENU, 0, 0, KEY_BACK, 0, 0,
     0 , 0, 0, 0, 0, 0, 0, 0,//0x10
@@ -54,6 +54,10 @@ __u16 cec_key_map[128] = {
     0 , KEY_MEDIA, 0, 0, KEY_POWER, 0, 0, 0,
     0 , KEY_BLUE, KEY_RED, KEY_GREEN, KEY_YELLOW, 0, 0, 0,//0x70
     0 , 0, 0, 0, 0, 0, 0, 0x2fd,
+    0 , 0, 0, 0, 0, 0, 0, 0,//0x80
+    0 , 0, 0, 0, 0, 0, 0, 0,
+    0 , KEY_BACK, 0, 0, 0, 0, 0, 0,//0x90
+    0 , 0, 0, 0, 0, 0, 0, 0,
 };
 
 void cec_send_event(cec_rx_message_t* pcec_message)
diff --git a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c
index 1367a98..9254738 100755
--- a/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c
+++ b/drivers/amlogic/hdmi/hdmi_tx/hdmi_tx_cec.c
@@ -470,6 +470,8 @@ void cec_input_handle_message(void)
     unsigned char   opcode;
 
     opcode = cec_global_info.cec_rx_msg_buf.cec_rx_message[cec_global_info.cec_rx_msg_buf.rx_write_pos].content.msg.opcode;
+
+    hdmi_print(INF, CEC "opcode:0x%x, hdmitx_device->cec_func_config:0x%x\n",opcode,hdmitx_device->cec_func_config);
 
     if (NULL == hdmitx_device)
     {
@@ -483,12 +485,14 @@ void cec_input_handle_message(void)
         switch (opcode)
         {
             case CEC_OC_USER_CONTROL_PRESSED:
+            case CEC_OC_VENDOR_REMOTE_BUTTON_DOWN:
                 // check valid msg
                 {
                     unsigned char opernum;
                     unsigned char follower;
                     opernum  = cec_global_info.cec_rx_msg_buf.cec_rx_message[cec_global_info.cec_rx_msg_buf.rx_write_pos].operand_num;
                     follower = cec_global_info.cec_rx_msg_buf.cec_rx_message[cec_global_info.cec_rx_msg_buf.rx_write_pos].content.msg.header & 0x0f;
+                    hdmi_print(INF, CEC "opernum:0x%x, follower:0x%x\n",opernum,follower);
                     if (opernum != 1 || follower == 0xf) break;
                 }
                 cec_user_control_pressed_irq();
